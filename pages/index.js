import Head from "next/head";
import React, { Component } from "react";
class Home extends React.Component {
  state = {
    original: "",
    originalRange: "",
    convertedPositive: "",
    convertedNegative: "",
  };

  convertParabola = () => {
    const original = this.state.original;
    const originalRange = this.state.originalRange;

    const ranges = originalRange.match(/(\d[\d\.]*)/g);
    const positiveRange = ranges[0];
    const negativeRange = ranges[1];
    //equation
    const a = original.substring(
      original.indexOf("=") + 1,
      original.indexOf("\\left")
    );
    const b = original.substring(
      original.indexOf("y") + 1,
      original.indexOf("\\right")
    );
    const c = original.substring(original.indexOf("{2}") + 3, original.length);

    const convertedPositive =
      `y=\\sqrt{\\frac{\\left(x-${c}\\right)}{${a}}}-${b}\\ \\left\\{${positiveRange}>y\\right\\}`
        .replaceAll("++", "+")
        .replaceAll("+-", "-")
        .replaceAll("--", "+")
        .replaceAll("-+", "-");

    const convertedNegative =
      `y=-\\sqrt{\\frac{\\left(x-${c}\\right)}{${a}}}-${b}\\ \\left\\{${negativeRange}<y\\right\\}`
        .replaceAll("++", "+")
        .replaceAll("+-", "-")
        .replaceAll("--", "+")
        .replaceAll("-+", "-");

    this.setState({ convertedPositive, convertedNegative });
  };
  render() {
    return (
      <div>
        <Head>
          <title>Create Next App</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <div id="wrapper">
          <div>
            <div id="title">Parabola Builder</div>

            <div
              style={{
                display: "flex",
                alignItems: "center",
                marginBottom: 20,
              }}
            >
              <div className="label">Equation: </div>
              <input
                className="input"
                type="text"
                onChange={(e) => this.setState({ original: e.target.value })}
              />
            </div>
            <div
              style={{
                display: "flex",
                alignItems: "center",
                marginBottom: 20,
              }}
            >
              <div className="label">Range: </div>
              <input
                className="input"
                type="text"
                onChange={(e) =>
                  this.setState({ originalRange: e.target.value })
                }
              />
            </div>
            <button className="button" onClick={this.convertParabola}>
              Convert
            </button>

            <div className="header">Converted Results</div>

            <div className="results">
              Positive: {this.state.convertedPositive}
            </div>
            <div className="results">
              Negative: {this.state.convertedNegative}
            </div>
            <button
              className="button"
              onClick={() => {
                navigator.clipboard.writeText(this.state.convertedPositive);
              }}
            >
              Copy Positive
            </button>
            <button
              className="button"
              onClick={() => {
                navigator.clipboard.writeText(this.state.convertedNegative);
              }}
            >
              Copy Negative
            </button>
          </div>
        </div>
      </div>
    );
  }
}

export default Home;
